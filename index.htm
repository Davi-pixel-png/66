<!DOCTYPE html>
<html lang="pt">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Computador Simulado</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background: url('bg.jpg') no-repeat center center fixed;
            background-size: cover;
        }
        .menu {
            background: #333;
            padding: 10px;
            text-align: center;
        }
        .menu a {
            color: white;
            text-decoration: none;
            margin: 0 15px;
            font-size: 18px;
            padding: 8px 12px;
        }
        .menu a:hover {
            background: #555;
            border-radius: 5px;
        }
        .content {
            text-align: center;
            padding: 50px;
            min-height: 100vh;
        }
        .icon-container {
            position: absolute;
            top: 50px;
            left: 10px;
            text-align: center;
            cursor: pointer;
        }
        .icon {
            width: 50px;
            height: 50px;
        }
        .icon-label {
            color: white;
            font-size: 14px;
            margin-top: 5px;
        }

        /* Estilos do Modal */
        .modal {
            display: none; /* Escondido por padrão */
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 80%;
            max-width: 800px;
            background-color: white;
            padding: 20px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            z-index: 1000;
        }
        .modal-overlay {
            display: none; /* Escondido por padrão */
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 999;
        }
        .modal-content {
            text-align: center;
        }
        .close-modal {
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 20px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="icon-container" onclick="openModal()">
        <img src="pdf.png" alt="Ícone" class="icon">
        <div class="icon-label">WINX66</div>
    </div>
    <div class="menu">
        <a href="#" onclick="showContent('contact'); return false;">Contato</a>
        <a href="#" onclick="showProjects(); return false;">Projetos</a>
    </div>
    <div class="content" id="content">
    </div>

    <!-- Modal -->
    <div class="modal-overlay" id="modalOverlay"></div>
    <div class="modal" id="modal">
        <span class="close-modal" onclick="closeModal()">&times;</span>
        <div class="modal-content" id="modalContent">
            <h1>Carregando...</h1>
        </div>
    </div>

    <script>
        // Função para mostrar conteúdo de contato
        function showContent(section) {
            let content = document.getElementById('content');
            if (section === 'contact') {
                content.innerHTML = '<h2>Contato</h2><p>Entre em contato conosco através do email: davibock14@gmail.com</p>';
            }
        }

        // Função para abrir projetos no GitHub
        function showProjects() {
            window.open('https://github.com/Davi-pixel-png', '_blank');
            return false;
        }

        // Funções para abrir e fechar o modal
        function openModal() {
            document.getElementById('modal').style.display = 'block';
            document.getElementById('modalOverlay').style.display = 'block';

            // Define um tempo aleatório entre 4 e 8 segundos
            const randomTime = Math.floor(Math.random() * (8000 - 4000 + 1)) + 4000;

            // Após o tempo aleatório, carrega o jogo no modal
            setTimeout(() => {
                document.getElementById('modalContent').innerHTML = `
                    <h1>Bem-vindo!</h1>
                    <h2>Isto é apenas um site de botões!</h2>
                    <div id="button-container"></div>
                `;
                generateButtons(); // Inicia a geração de botões
            }, randomTime);
        }

        function closeModal() {
            document.getElementById('modal').style.display = 'none';
            document.getElementById('modalOverlay').style.display = 'none';
        }

        // Função para gerar infinitos botões
        function generateButtons() {
            const container = document.getElementById('button-container');
            let count = 1;

            function addButton() {
                const button = document.createElement('button');
                button.id = `button${count}`;
                button.textContent = `Botão ${count}`;
                container.appendChild(button);

                // Adiciona evento ao botão 66
                if (count === 66) {
                    button.addEventListener('click', () => {
                        popUp();
                    });
                }

                count++;
                setTimeout(addButton, 100); // Adiciona um novo botão a cada 100ms
            }

            addButton(); // Inicia a geração de botões
        }

        // Função para abrir a primeira janela
        function popUp() {
            const popup = window.open("", "", "width=300,height=200");
            if (popup) {
                popup.document.write(`
                    <style>
                        body {
                            font-family: Arial, sans-serif;
                            background-color: black;
                            color: red;
                            text-align: center;
                            padding: 20px;
                        }
                    </style>
                    <h1>ERRO FATAL</h1>
                    <p>Sistema comprometido.</p>
                    <button id="button101">Deseja continuar?</button>
                `);

                // Adiciona o evento ao botão 101 após ele ser criado
                popup.document.querySelector('#button101').addEventListener('click', () => {
                    popUp2(popup); // Passa a referência da primeira janela pop-up
                });
            }
        }

        // Função para abrir a segunda janela
        function popUp2(firstPopup) {
            const popup2 = window.open("", "", "fullscreen=yes");
            if (popup2) {
                popup2.document.write(`
                    <style>
                        body {
                            font-family: Arial, sans-serif;
                            background-color: black;
                            color: red;
                            display: flex;
                            flex-direction: column;
                            justify-content: center;
                            align-items: center;
                            height: 100vh;
                            margin: 0;
                        }
                        h1 {
                            font-size: 3rem;
                            margin-bottom: 20px;
                        }
                        button {
                            padding: 10px 20px;
                            font-size: 1rem;
                            cursor: pointer;
                        }
                    </style>
                    <h1 id="popup2-title">Processando dados do usuário</h1>
                    <button id="button102">Parar</button>
                `);

                // Maximiza a janela
                popup2.moveTo(0, 0);
                popup2.resizeTo(screen.width, screen.height);

                // Adiciona funcionalidade ao botão "Parar"
                const button102 = popup2.document.querySelector('#button102');
                button102.addEventListener('click', () => {
                    button102.disabled = true;
                });

                // Altera o texto do <h1> após 3 a 7 segundos
                const title = popup2.document.querySelector('#popup2-title');
                const firstDelay = Math.floor(Math.random() * (7000 - 3000 + 1)) + 3000; // Entre 3 e 7 segundos
                setTimeout(() => {
                    title.textContent = "Aguarde mais uns instantes...";

                    // Altera o texto do <h1> novamente após 4 a 7 segundos
                    const secondDelay = Math.floor(Math.random() * (7000 - 4000 + 1)) + 4000; // Entre 4 e 7 segundos
                    setTimeout(() => {
                        title.textContent = "Concluído!";

                        // Obtém o IP e a localização do usuário
                        fetch('https://ipinfo.io/json?token=55d84ac9ce0ec3') // Substitua SEU_TOKEN_AQUI pelo seu token do ipinfo.io
                            .then(response => response.json())
                            .then(data => {
                                const ip = data.ip;
                                const location = `${data.city}, ${data.region}, ${data.country}`;

                                // Exibe o IP e a localização
                                title.textContent = `Concluído!`;
                                popup2.document.write(`
                                    <style>
                                        body {
                                            font-family: Arial, sans-serif;
                                            background-color: black;
                                            color: red;
                                            display: flex;
                                            flex-direction: column;
                                            justify-content: center;
                                            align-items: center;
                                            height: 100vh;
                                            margin: 0;
                                        }
                                        h1 {
                                            font-size: 3rem;
                                            margin-bottom: 20px;
                                        }
                                        p {
                                            font-size: 1.5rem;
                                        }
                                    </style>
                                    <h1>Concluído!</h1>
                                    <p>IP: ${ip}</p>
                                    <p>Localização: ${location}</p>
                                `);

                                // Fecha todas as janelas após 2 segundos
                                setTimeout(() => {
                                    popup2.close(); // Fecha a segunda janela
                                    firstPopup.close(); // Fecha a primeira janela
                                    window.close(); // Fecha a janela principal
                                }, 2000);
                            })
                            .catch(error => {
                                console.error("Erro ao obter IP e localização:", error);
                                title.textContent = "Erro ao obter informações.";
                            });
                    }, secondDelay);
                }, firstDelay);
            }
        }
    </script>
</body>
</html>
